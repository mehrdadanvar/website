hist(rnorm(1000),breaks = 50,border="white")
hist(rnorm(1000),breaks = 50,border="white")
hist(rnorm(10000),breaks = 100,border="white")
hist(rnorm(10000),breaks = 100,border="white",freq = F)
hist(rnorm(10000),breaks = 100,border="white",freq = F,col = "red")
hist(rnorm(10000),breaks = 100,border="white",freq = F,col = "brown")
hist(rnorm(10000),breaks = 100,border=NA,freq = F,col = "brown")
hist(rnorm(10000),breaks = 100,border="white",freq = F,col = "brown")
install.packages("tidyverse",dependencies = TRUE, Ncpus = 6,repos = "https://mirror.rcg.sfu.ca/mirror/CRAN/")
library("ggplot2")
detach("ggplot2")
installed.packages()
df = installed.packages()
View(df)
library("tidyverse")
library("tidy")
install.packages("tidyverse",Ncpus = 6,repos = "https://mirror.rcg.sfu.ca/mirror/CRAN/")
install.packages("tidyverse",Ncpus = 6,repos = "https://mirror.rcg.sfu.ca/mirror/CRAN/")
library("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
library("tidyverse")
InsectSprays
m <- matrix(rnorm(100),nrow = 10,byrow = TRUE)
m
rstudioapi::addTheme("https://raw.githubusercontent.com/jnolis/synthwave85/master/Synthwave85.rstheme", TRUE, TRUE, FALSE)
vec = seq(1.5,5,1)
my_colors = colorRampPalette(c(rgb(0,0,0,0.5),rgb(0.2,0.5,0.5,0.5), rgb(1,1,1,1)),alpha=T)( length(vec) )
curve(dweibull(x,shape = 1,scale=1),from = -1, to=10 , n=2000, axes=FALSE, xlab = NA, ylab = NA, col="white")
for (i in seq_along(vec)) {
curve(dweibull(x, 3,vec[i],log = F), from = -1, 10 , n= 2000, add = TRUE,col=my_colors[i],lw=1)
#print(((0.1)+(i/5)))
print(vec[i])
}
setwd("~/projects/rxcode/app/public/")
vec = seq(1.5,5,1)
my_colors = colorRampPalette(c(rgb(0,0,0,0.5),rgb(0.2,0.5,0.5,0.5), rgb(1,1,1,1)),alpha=T)( length(vec) )
curve(dweibull(x,shape = 1,scale=1),from = -1, to=10 , n=2000, axes=FALSE, xlab = NA, ylab = NA, col="white")
for (i in seq_along(vec)) {
curve(dweibull(x, 3,vec[i],log = F), from = -1, 10 , n= 2000, add = TRUE,col=my_colors[i],lw=1)
#print(((0.1)+(i/5)))
print(vec[i])
}
setwd("~/projects/rxcode/app/public/")
vec = seq(1.5,5,1)
my_colors = colorRampPalette(c(rgb(0,0,0,0.5),rgb(0.2,0.5,0.5,0.5), rgb(1,1,1,1)),alpha=T)( length(vec) )
curve(dweibull(x,shape = 1,scale=1),from = -1, to=10 , n=2000, axes=FALSE, xlab = NA, ylab = NA, col="white")
for (i in seq_along(vec)) {
curve(dweibull(x, 3,vec[i],log = F), from = -1, 10 , n= 2000, add = TRUE,col=my_colors[i],lw=1)
#print(((0.1)+(i/5)))
print(vec[i])
}
library("tidyverse")
data < - as.data.frame(x=seq(1,1000) ,y=rnorm(1000))
ggplot(data,aes(x,y))+
geom_point()
data < - data.frame(x=seq(1,1000) ,y=rnorm(1000))
library("tidyverse")
data < - data.frame(x=seq(1,1000) ,y=rnorm(1000))
data <- data.frame(x=seq(1,1000) ,y=rnorm(1000))
ggplot(data,aes(x,y))+
geom_point()
data <- data.frame(x=seq(1,2000) ,y=c(males,females))
males <- rnorm(1000,180,20)
females <- rnorm(1000,170,15)
data <- data.frame(x=seq(1,2000) ,y=c(males,females))
View(data)
data <- data.frame(x=seq(1,2000) ,y=c(males,females),gender = c(rep("male",1000),rep("female")1000))
data <- data.frame(x=seq(1,2000) ,y=c(males,females),gender = c(rep("male",1000),rep("female",1000)))
ggplot(data,aes(x,y))+
geom_point()
ggplot(data,aes(y,gender))+
geom_histogram(fill=gender)
data <- data.frame(x=seq(1,2000) ,y=c(males,females),gender = c(rep("male",1000),rep("female",1000)))
ggplot(data,aes(y,gender))+
geom_histogram(fill="gender")
ggplot(data,aes(gender))+
geom_histogram()
ggplot(data, aes(y,color = gender))+
geom_histogram()
library("rplumber")
library("plumber")
install.packages("plumbr")
library("plumber")
install.packages("httr2", dependencies = T)
library("httr2")
request <- request("https://rxcode.ca")
req <- request("https://rxcode.ca")
req
req %>% req_dry_run()
response <- req_perform(req)
for(i in c(1:100)){
req <- request("https://rxcode.ca")
response <- req_perform(req)
print(response$status_code)
}
for(i in c(1:100)){
req <- request("https://rxcode.ca")
response <- req_perform(req)
print(response$status_code)
}
for(i in c(1:100)){
req <- request("https://rxcode.ca")
response <- req_perform(req)
print(response$status_code)
}
req <- request("https://cran.r-project.org/web/packages/available_packages_by_name.html")
response <- req_perform(req)
print(response$body)
View(response)
response %>% resp_body_html()
test =response %>% resp_body_html()
test$doc
test$node
install.packages("styler")
styler:::set_style_transformers()
styler:::style_active_file()
